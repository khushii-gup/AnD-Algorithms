class Solution {
    public int maxProduct(int[] nums) {
        int n = nums.length;
        int[] dp = new int[n];
        dp[0] = nums[0];
        int max = nums[0];
        for(int i = 1; i<n; i++){
            if(dp[i-1] == 0){
                dp[i] = nums[i];
            } else {
            dp[i] = nums[i] * dp[i-1];
            }
            max = Math.max(dp[i], max);
        }
        int[] dpReverse = new int[n];

        dpReverse[n-1] = nums[n-1];
        for(int i = n-2; i>= 0; i--){
            if(dpReverse[i+1] == 0){
                dpReverse[i] = nums[i];
            } else {
            dpReverse[i] = nums[i]*dpReverse[i+1];
            }
            max = Math.max(dpReverse[i], max);
        }
        max = Math.max(max, dpReverse[n-1]);
       return max;
    }
}
