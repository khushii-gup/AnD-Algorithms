public class EditDistance {
	public static void main(String[] args) {
		char[] A = {'T','I','G','E','R'};
		char[] B = {'Z', 'I', 'E','G', 'E'};
		
		System.out.println(minED(A,B));
	}
	
	public static int minED(char[] A, char[] B) {
		
		int n = A.length;
		int m = B.length;
		int[][] dp = new int[n+1][m+1];
		
		for(int i = 0; i<=n; i++) {
			dp[i][0] = i;
		}
		
		for(int j = 0; j<=m; j++) {
			dp[0][j] = j;
		}
		
		
		for(int i = 1; i<=n; i++) {
			for(int j = 1; j<= m; j++) {
				if(A[i-1] == B[j-1]) {
					dp[i][j] = Math.min(dp[i-1][j-1], Math.min(dp[i-1][j], dp[i][j-1]) + 1);
				} else {
					dp[i][j] = Math.min(dp[i-1][j-1], Math.min(dp[i-1][j], dp[i][j-1])) + 1;
				}
			}
		}
		
		return dp[n][m];
	}
}
