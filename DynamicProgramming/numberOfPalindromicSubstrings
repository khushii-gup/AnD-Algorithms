class Solution {
    public int countSubstrings(String s) {
        int n = s.length();
        boolean[][] palExists = new boolean[n][n];
        for(int i = 0; i<n; i++){
            palExists[i][i] = true;
            if(i<n-1 && s.charAt(i) == s.charAt(i+1)){
                palExists[i][i+1] = true;
            }
        }

        for(int gap = 2; gap<n; gap++){
            for(int i = n-1-gap; i>= 0; i--){
                int j = gap+i;
                if(s.charAt(i) == s.charAt(j) && palExists[i+1][j-1]){
                    palExists[i][j] = true;
                } else palExists[i][j] = false;
            }
        }

        int[][] dp = new int[n][n];
        for(int i = 0; i<n; i++){
            dp[i][i] = 1;
            if(i<n-1 && s.charAt(i) == s.charAt(i+1)){
                dp[i][i+1] = 3;
            } else if(i<n-1) dp[i][i+1] = 2;

        }

        for(int gap = 2; gap<n; gap++){
            for(int i = n-1-gap; i>= 0; i--){
                int j = gap+i;
                if(s.charAt(i) == s.charAt(j) && palExists[i+1][j-1]){
                    dp[i][j] = dp[i][j-1] + dp[i+1][j] + 1 - dp[i+1][j-1];
                } else {
                    dp[i][j] = dp[i][j-1] + dp[i+1][j] - dp[i+1][j-1];
                }
            }
        }

       return dp[0][n-1]; 
    }
}
