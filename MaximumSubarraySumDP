public class MSSdp {
	public static void main(String[] args) {
		int[] A = {9,-3,8,-5, 6,2};
		System.out.println(MSSRecursive(A, 0, A.length-1));
		int[][] dp = new int[A.length][A.length];
		for(int i = 0; i<A.length; i++) {
			for(int j = 0; j<A.length ;j++) {
				dp[i][j] = -1;
			}
		}
		
	}
	
	public static int MSSRecursive(int[] A, int i, int j ){
		if(i==j) {
			return A[i];
		}
		if(j<i) {
			return 0;
		}
		
		int mid = (i+j)/2;
		int s1 = MSSRecursive(A, i, mid);
		int s2 = MSSRecursive(A, mid+1, j);	
		if(s1+s2 > 0) {
			return s1+s2;
		}
		if(s2 > 0) {
			return s2;
		}
		return 0;
	}
	
	public static int TopDown(int[] A, int i, int j, int[][] dp) {
		
		
		return -1;
	}
	
	public static int BottomUp(int[] A) {
		int n = A.length;
		int[][] dp = new int[n][n];
		int i = 0; int j = 0;
		int max = 0;
		for(i = 0; i<n;i++) {
			for(j = i; j<n; j++) {
				if(i==j) {
					dp[i][j] = A[i];
				} else {
					dp[i][j] = dp[i][j-1] + A[j];
				}
				if(dp[i][j] > max) {
					max = dp[i][j];
				}
			}
		}
		
		return max;
		
		
	}

}
